!function(){angular.module("app",["ui.bootstrap","smart-table"])}();
!function(){function i(i){var o=this;o.$onInit=function(){console.log("visitor edit init"),o.resolve&&(o.id=o.resolve.id),o.id&&i.get("api/visitor/"+o.id).then(function(i){o.visitor=i.data,console.log("ctrl",o)}).catch(function(i){console.log("err",i.message)})},o.cancel=function(){o.dismiss()},o.save=function(){return console.log("save visitor",o.visitor),i.post("api/visitor",o.visitor).then(function(i){angular.extend(o.visitor,i.data),o.modalInstance.close(o.visitor)}).catch(function(i){console.error("something went wrong",i.message)})}}var o=angular.module("app");o.component("visitorEdit",{bindings:{item:"<",resolve:"<",close:"&",dismiss:"&",modalInstance:"<"},templateUrl:"app/visitors/visitor-edit.component.html",controller:["$http",i]})}();
!function(){function i(i,t){var n=this;n.$onInit=function(){console.log("init visitor list"),i.get("api/visitor").then(function(i){n.visitors=i.data})},n.create=function(){t.open({component:"visitorEdit",bindings:{modalInstance:"<"},resolve:{},size:"md"}).result.then(function(i){n.visitors.unshift(i)},function(i){})},n.edit=function(i){t.open({component:"visitorEdit",bindings:{modalInstance:"<"},resolve:{id:i.id},size:"md"}).result.then(function(t){angular.extend(i,t)},function(i){})},n.delete=function(t){i.delete("api/visitor/"+t.id).then(function(i){console.log("r",i);var o=n.visitors.indexOf(t);n.visitors.splice(o,1)})}}var t=angular.module("app");t.component("visitorList",{templateUrl:"app/visitors/visitor-list.component.html",controller:["$http","$uibModal",i]})}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
